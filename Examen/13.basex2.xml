<?xml version="1.0" encoding="UTF-8"?>
<bookstore>
  <book category="COOKING">
    <title lang="en">Everyday Italian</title>
    <author>Giada De Laurentiis</author>
    <year>2005</year>
    <price>30.00</price>
  </book>
  <book category="CHILDREN">
    <title lang="en">Harry Potter</title>
    <author>J K. Rowling</author>
    <year>2005</year>
    <price>29.99</price>
  </book>
  <book category="WEB">
    <title lang="en">XQuery Kick Start</title>
    <author>James McGovern</author>
    <author>Per Bothner</author>
    <author>Kurt Cagle</author>
    <author>James Linn</author>
    <author>Vaidyanathan Nagarajan</author>
    <year>2003</year>
    <price>49.99</price>
  </book>
  <book category="WEB">
    <title lang="en">Learning XML</title>
    <author>Erik T. Ray</author>
    <year>2003</year>
    <price>39.95</price>
  </book>
</bookstore> 

<!--
    A partir del documento XML desarrollar en xquery las
    siguientes consultas

    Mostrar los títulos de los libros con la
    etiqueta "titulo".

    for $i in doc('basex') //title/text()
    return <titulo>({$i})</titulo>

    Mostrar los libros cuyo precio sea menor o igual a 30.
    Primero incluyendo la condición en la cláusula "where" 
    y luego en la ruta del XPath.

    for $libro in doc('basex') //book
    where $libro/number(price) <= 30
    return <libro>{$libro}</libro>

    for $libro in doc('basex') //book[price <= 30]
    return <libro>{$libro}</libro>

    Mostrar sólo el título de los libros cuyo precio sea
    menor o igual a 30.

    for $libro in doc('basex') //book/title[price <= 30]/title
    return <libro>{$libro}</libro>

    Mostrar sólo el título sin atributos de los libros
    cuyo precio sea menor
    o igual a 30.

    for $libro in doc('basex') //book[price <= 30]/title/text()
    return <libro>{$libro}</libro>

    Mostrar el título y el autor de los libros del año
    2005, y etiquetar cada uno de ellos con "lib2005".

    for $libro in doc('basex') //book
    where $libro/year = 2005
    return <lib2005>{$libro/title/text(), $libro/author}</lib2005>

    Mostrar los años de publicación, primero con "for" y
    luego con "let" para comprobar la diferencia entre
    ellos. Etiquetar la salida con "publicacion".

    for $libro in doc('basex') //book/year/text()
    return <publicacion>{$libro}</publicacion>

    Mostrar los libros ordenados primero por "category"
    y luego por "title" en una sola consulta.

    for $libro in //book
    order by $libro/@category,$libro/title
    return $libro

    Mostrar cuántos libros hay, y etiquetarlo con "total".

    let $libro:= count(//book)
    return<total>{$libro}</total>

    Mostrar los títulos de los libros y al final una
    etiqueta con el número total de libros.

    let $total:= count(//book), $titulos:=(for $libro in //title
    return <titulo>{$libro/text()}</titulo>)
    return <resultado>{$titulos}
    <total_libros>{$total}</total_libros>
    </resultado>

    Mostrar el precio mínimo y máximo de los libros.

    let $maximo:= max(//price), $minimo:= min(//price)
    return
    <resultado>
      <maximo>{$maximo}</maximo>
      <minimo>{$minimo}</minimo>
    </resultado>

    Mostrar el título del libro, su precio y su precio
    con el IVA incluido, cada uno con su propia etiqueta.
    Ordénalos por precio con IVA.

    for $libro in //book
    let $precio_iva:=($libro/price * 1.21)
    order by $precio_iva
    return
    <libro>
      <titulo>{$libro/title/text()}</titulo>
      <precio>{$libro/price/text()}</precio>
      <precio_iva>{$precio_iva}</precio_iva>
    </libro>

    Mostrar la suma total de los precios de los libros
    con la etiqueta "total".

    let $libros:= /bookstore/book
    return <total>{sum( $libros/price)}</total>

    Mostrar cada uno de los precios de los libros, y al
    final una nueva etiqueta con la suma de los precios.

    <libros>
    {
      for $libro in /bookstore/book
      return $libro/price
    }
    {
      let $libros:=//bookstore/book
      return <total>{sum($libros/price)}</total>
    }
    </libros>

    Mostrar el título y el número de autores que tiene
    cada título en etiquetas diferentes.

    for $libro in //book
    return
    <libro>
      {$libro/title}
      <autores>{count($libro/author)}</autores>
    </libro>

    Mostrar en la misma etiqueta el título y entre paréntesi
     el número de autores que tiene ese título.

    Mostrar los libros escritos en años que terminen en "3".

    for $libro in //book
    where ends-with($libro/year, "3")
    return <escritos>{$libro}</escritos>

    Mostrar los libros cuya categoría empiece por "C".

    Mostrar los libros que tengan una "X" mayúscula o
    minúscula en el título ordenados de manera descendente.

    Mostrar el título y el número de caracteres que
    tiene cada título, cada uno con su propia etiqueta.

    Mostrar todos los años en los que se ha publicado un
    libro eliminando los repetidos. Etiquétalos con "año".

    Mostrar todos los autores eliminando los que se repiten
    y ordenados por el número de caracteres que tiene cada autor.

    Mostrar los títulos en una tabla de HTML.
